#################################
# Predictions
#################################
Predictions:
  # Perturbative order, 0: LO, 1: NLO, 2:NNLO
  perturbative order: 2

  # Initial scale in GeV to be used for the DGLAP evolution of the PDFs.
  mu0: 1.414213562

  # Quark thresholds
  thresholds: [0, 0, 0, 1.51, 4.92]

  # Strong coupling
  alphas:
    aref: 0.1185
    Qref: 91.1876

  # APFEL++ grid
  xgrid:
    - [150, 1e-7, 3]
    - [100, 1e-1, 3]
    - [60,  5e-1, 3]
    - [50,  8.5e-1, 3]

#################################
# Optimiser
#################################
# Parameters of the optimiser managed by ceres-solver
Optimizer:
  max_num_iterations: 3000
  chi2_tolerance: 3
  use_nonmonotonic_steps: True # HH

#################################
# NNAD
#################################
NNAD:
  # Initialisation seed
  seed: 0

  # Architecture
  architecture: [1, 25, 2]

  # The output function can be either the activation function of the
  # NN (0), or linear (1), or quadratic (2). If this entry is absent a
  # linear function is assumed.
  output function: 2

  # The flavour map gives the specific combinations of
  # distributions in the physical-basis (d, u, s, ...) to be fitted to
  # the data. The number of combinations has to match the number of
  # nodes of the output layer of the NN given in the
  # architecture. When defining the flavour map, one should keep in
  # mind that the code computes predictions using the QCD-evolution
  # basis (Sigma, V, T3, ...). Therefore, in general,
  # QCD-evolution-like combinations should be preferred. Moreover, the
  # distributions are assumed to be for the positive charge of the
  # given hadronic species. The negative distributions are derived
  # using charge conjugation (q->qbar).

  #             tb  bb  cb  sb  ub  db  g   d   u   s   c   b   t  # Combinations to be fitted (i.e. output of the NN):
  flavour map: [0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, # - g
                0,  0,  0,  1,  1,  1,  0,  1,  1,  1,  0,  0,  0] # - u + d + s + ub + db + sb + ...
                # 0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0, # - d
		            # 0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0, # - ub
                # 0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0, # - db
		            # 0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0] # - s = sb

  # Flux factor
  flux factor:
    grid: [0.0001, 0.0002, 0.0003, 0.0004, 0.0005, 0.0006, 0.0007, 0.0008, 0.0009, 0.001, 0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1]
    interpolation degree: 3
    parameters:
      - [-1.2, -1.1]   # w1
      # - [0, 0]         # w2
      - [86, 87]       # w3
      - [1.7, 1.8]     # w4

#################################
# Data
#################################
Data:
  # Seed used for the replica generation and the splitting between
  # training and validation (do not use a too large number here in
  # order to avoid correlation in the replica generation).
  seed: 0

  # Datasets to be included in the fit along with specific cuts and
  # traning fraction. Each single dataset can implement an arbitrary
  # number of cuts determined by the name of the appropriate function
  # (e.g. zcut) and the allowed range.
  # NOTE: it is important that the dataset list is the last entry of
  # of the configuration file.
  # When run, Filter.cc will overwrite all the lines after "  sets:",
  # replacing them with an updated list of datasets.
  sets:
  - {name: H1LRG_12_MS    , file:  H1LRG_12_MS.yaml,     cuts: [{name: Qcut, min: 2.96479, max: 100000},{name: xcut, min: 0.0, max: 0.801}], training fraction: 0.5}
  - {name: H1LRG_11_225_MS, file:  H1LRG_11_225_MS.yaml, cuts: [{name: Qcut, min: 2.96479, max: 100000},{name: xcut, min: 0.0, max: 0.801}], training fraction: 0.5}
  - {name: H1LRG_11_252_MS, file:  H1LRG_11_252_MS.yaml, cuts: [{name: Qcut, min: 2.96479, max: 100000},{name: xcut, min: 0.0, max: 0.801}], training fraction: 0.5}
  - {name: H1LRG_11_319_MS, file:  H1LRG_11_319_MS.yaml, cuts: [{name: Qcut, min: 2.96479, max: 100000},{name: xcut, min: 0.0, max: 0.801}], training fraction: 0.5}
  - {name: h1zeus-combined, file:  h1zeus-combined.yaml, cuts: [{name: Qcut, min: 2.96479, max: 100000},{name: xcut, min: 0.0, max: 0.801}], training fraction: 0.5}
#   - {name: H1LRG_12_HH, file:      H1LRG_12_HH.yaml,     cuts: [{name: Qcut, min: 1.0, max: 100000}], training fraction: 0.5}

